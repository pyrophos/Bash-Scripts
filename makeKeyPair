#!/bin/bash

KEY_NAME="demoKey"
KEY_LENGTH=4096
KEY_VALID_LENGTH=1

# Use > 0 to consume one or more arguments per pass in the loop
while [[ $# > 0 ]]
do
key="$1"
case $key in
    -n|--keyname)
    KEY_NAME="$2"
    shift # past argument
    ;;
    -k|--keylength)
    KEY_LENGTH="$2"
    shift # past argument
    ;;
    -v|--validlength)
    KEY_VALID_LENGTH="$2"
    shift # past argument
    ;;
    -h|--help|-?)
    echo ""
    echo "makekeypair creates a directory and fills it with "
    echo "the desired key pair files."
    echo ""
    echo "Example execution:"
    echo "   makekeypair -n demokey -k 2048 -v 1w"
    echo ""
    echo "arguments:"
    echo "   -n, --keyname     | The name of the key"
    echo "   -k, --keylength   | The length of the key"
    echo "   -v, --validlength | The valid length of the key"
    echo ""
    shift # past argument
    exit 1
    ;;
esac
shift # past argument or value
done

NAME=${KEY_NAME}_${KEY_LENGTH}
mkdir ${NAME}
cd ${NAME}

openssl genrsa -out ${NAME}.key ${KEY_LENGTH}
openssl req -new -key ${NAME}.key -out ${NAME}.csr -subj "/C=US/ST=Texas/L=Austin/O=UnboundID/OU=UnboundID/CN=localhost/emailAddress=sales@unboundid.com/serialNumber=0123456/" -nodes
openssl x509 -req -days ${KEY_VALID_LENGTH} -in ${NAME}.csr -signkey ${NAME}.key -out ${NAME}.crt
openssl pkcs8 -topk8 -inform PEM -outform PEM -in ${NAME}.key -out ${NAME}.pem -nocrypt
